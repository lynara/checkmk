#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# M. Martin 05.12.2019
# Creates a service for each ipsec phase 1
# and groups its phase 2 in it.

def inventory_fortigate_ipsec_ph1(info):
    vdoms = dict(info[0])
    for ph1 in info[1]:
        vdom = vdoms[ph1[3]]
        if len(vdoms) > 1:
            name = vdom + " " + ph1[0] 
        else:
            name = ph1[0]
        yield name, None


def check_fortigate_ipsec_ph1(item, params, info):
    p1s = {}
    vdoms = dict(info[0])
    for p1, p2, status, vdom_idx in info[1]:
        status = int(status)
        if len(vdoms) > 1:
            name = vdoms[vdom_idx] + " " + p1
        else:
            name = p1
        if name == item:
            for ph2 in p1s.setdefault(name, []):
                if ph2['p2name'] == p2:
                    ph2['status'] = max(ph2['status'], status)
                    break
            else:
                p1s[name].append({'p2name' : p2,
                                'status' : status})
                                   
    tunnels_down    = []
    if item not in p1s:
        return

    for i in p1s[item]:
        if i['status'] == 1:
            tunnels_down.append(i['p2name'])

    num_total        = len(p1s[item])
    num_down         = len(tunnels_down)
    num_up           = num_total - num_down

    infotext = "Total: %d, Up: %d, Down: %d" % \
               (num_total, num_up, num_down)

    warn, crit = 1, num_total
    status = 0
    if crit is not None and num_down >= crit:
        status = 2
    elif warn is not None and num_down >= warn:
        status = 1
    if status:
        infotext += " (warn/crit at %s/%s)" % (warn, crit)
    if tunnels_down:
        infotext += ", Tunnels: %s" % (", ".join(tunnels_down))

    return status, infotext, [('active_vpn_tunnels', num_up, '', '', 0, num_total)]


check_info["fortigate_ipsec_ph1"] = {
    "inventory_function"        : inventory_fortigate_ipsec_ph1,
    "check_function"            : check_fortigate_ipsec_ph1,
    "service_description"       : "VPN IPSec Tunnel %s",
    "has_perfdata"              : True,
    "snmp_scan_function"        : lambda oid: ".1.3.6.1.4.1.12356.101.1" in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info"                 : [(".1.3.6.1.4.1.12356.101.3.2.1.1", [1, 2]), (".1.3.6.1.4.1.12356.101.12.2.2.1", [
                                    2,  # fgVpnTunEntPhase1Name
                                    3,  # fgVpnTunEntPhase2Name
                                    20, # fgVpnTunEntStatus
                                    21, # fgVpnTunEntVdom
                                  ])],
    #"group"                     : "ipsecvpn",
}

